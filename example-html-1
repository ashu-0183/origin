<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kubernetes API Dashboard</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f8f8;
            color: #333;
        }

        header {
            background-color: #2c3e50;
            color: #ecf0f1;
            text-align: center;
            padding: 1rem;
            font-size: 1.5rem;
        }

        main {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        /* Additional Styles for New Feature */
        .namespace-input {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            font-size: 1rem;
        }

        .fetch-button {
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            background-color: #e67e22;
            color: #fff;
            border: none;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }

        .fetch-button:hover {
            background-color: #d35400;
        }
    </style>
</head>
<body>
    <header>
        <h1>Kubernetes API Dashboard</h1>
    </header>

    <main>
        <!-- Existing HTML Structure -->
        <div class="domain-selector">
            <!-- ... (existing domain selector buttons) -->
        </div>

        <div class="environment-selector">
            <!-- ... (existing environment selector buttons) -->
        </div>

        <table id="kube-table">
            <thead>
                <tr>
                    <th>Namespace</th>
                    <th>Name</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="kube-items"></tbody>
        </table>

        <!-- New Feature: Input for Multiple Namespaces -->
        <div id="namespace-input-container">
            <label for="namespace-input">Enter Namespaces (comma-separated):</label>
            <input type="text" id="namespace-input" class="namespace-input" placeholder="e.g., orgname-domain-env, orgname2-domain2-env">
            <button class="fetch-button" onclick="fetchKubeDetails()">Fetch Details</button>
        </div>
    </main>

    <script>
        // ... (existing JavaScript code)

        // New Feature: Fetch details for multiple namespaces
        function fetchKubeDetails() {
            const namespaceInput = document.getElementById("namespace-input").value;

            // Convert comma-separated namespaces to an array
            const namespaces = namespaceInput.split(",").map(ns => ns.trim());

            // Fetch data from your Spring Boot API based on namespaces
            const apiUrl = `http://localhost:${getPort(selectedDomain)}/api/status?namespaces=${namespaces.join(',')}`;

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    // Process and display Kubernetes details
                    const kubeItems = document.getElementById("kube-items");
                    kubeItems.innerHTML = ""; // Clear previous data

                    data.forEach(item => {
                        const row = document.createElement("tr");
                        const namespaceCell = document.createElement("td");
                        namespaceCell.textContent = item.namespace;
                        const nameCell = document.createElement("td");
                        nameCell.textContent = item.name;
                        const statusCell = document.createElement("td");
                        statusCell.textContent = item.status;
                        row.appendChild(namespaceCell);
                        row.appendChild(nameCell);
                        row.appendChild(statusCell);
                        kubeItems.appendChild(row);
                    });
                })
                .catch(error => console.error("Error fetching Kubernetes details:", error));
        }
    </script>
</body>
</html>
